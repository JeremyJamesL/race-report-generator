const form=document.querySelector("form"),outputArea=document.querySelector(".output"),loading=document.querySelector(".loading"),activityInput=document.querySelector(".enter-activity"),results=document.querySelector(".results"),unitSelector=document.querySelector(".unit-selector"),unitRadios=document.querySelectorAll(".radio-units"),addGoalBtn=document.querySelector(".goal-add"),goalCard=document.querySelector(".card--goals"),inputsArea=document.querySelector(".inputs"),raceInfoArea=document.querySelector(".card--race-info"),splitsArea=document.querySelector(".card--splits"),goalsArea=document.querySelector(".card--goals"),backgroundArea=document.querySelector(".card--background"),previewArea=document.querySelector(".preview"),sourceArea=document.querySelector(".race-source-text");let metricOrStandard,activities,globalRace,measurement="km",clientId="96784",clientSecret="fac7d050a2167b73f126050654539331d0ce413c",callActivity="https://www.strava.com/api/v3/activities/id?access_token=";form.addEventListener("submit",handleSubmit),raceInfoArea.addEventListener("input",setPreview),splitsArea.addEventListener("keyup",setSplitsPreview),goalsArea.addEventListener("keyup",setGoalsPreview),goalsArea.addEventListener("change",setGoalsPreview),goalsArea.addEventListener("click",setGoalsPreview),addGoalBtn.addEventListener("click",handleGoalAdd);const config={attributes:!0,childList:!0,subtree:!0},callback=()=>{const e={name:document.querySelector(".preview__name").textContent,date:document.querySelector(".preview__date").textContent,distance:document.querySelector(".preview__distance").textContent,location:document.querySelector(".preview__location").textContent,time:document.querySelector(".preview__time").textContent,elevation:document.querySelector(".preview__elevation").textContent,splits:Array.from(document.querySelectorAll(".race-splits")),goals:Array.from(document.querySelectorAll(".preview__goal"))},t=e.splits.map((function(e,t){return`| ${t+1} | ${e.value} |\n`})),n=e.goals.map((function(e,t){return`| ${e.children[0].childNodes[0].data} | ${e.children[1].childNodes[0].data} | ${e.children[2].childNodes[0].data} \n`})),o=`# Race report \n## Info\n### Name: ${e.name}\n### Date: ${e.date}\n### Distance: ${e.distance}\n### Location: ${e.location}\n### Time: ${e.time}\n### Elevation: ${e.elevation}\n### Splits\n| Split | Time |\n|------|------|\n${t.join("")}\n### Goals\n| Goal | Description | Completed? |\n|------|------|------|\n${n.join("")}`;sourceArea.textContent=o},observer=new MutationObserver(callback);function displayData(e,t){fetch(`https://www.strava.com/api/v3/activities/${t}?access_token=${e}`).then((e=>e.json())).then((e=>{hideLoading(),setActivities(e),setPreview()}))}function handleGoalAdd(){document.querySelector(".card--goals").insertAdjacentHTML("beforeend",' \n    <div class="input-group mb-3 goal">\n        <div class="input-group-text">\n        <input class="form-check-input mt-0" type="checkbox" value="" aria-label="Checkbox for following text input">\n        </div>\n        <input type="text" class="form-control" aria-label="Text input with checkbox">\n        <button type="button" class="btn-close goal-delete fs-6" aria-label="Close" role="button"></button>\n  </div>\n  ')}function displayLoading(){loading.classList.remove("d-none"),loading.classList.add("d-block")}function hideLoading(){loading.classList.remove("d-block"),loading.classList.add("d-none")}function setActivities(e){globalRace=e,metricOrStandard=e.laps.length>e.splits_standard.length?"km":"miles",document.querySelector(`.radio-${metricOrStandard}`).checked=!0;let t=e.name,n=new Date(1e3*e.elapsed_time).toISOString().slice(11,19);e.laps;results.classList.remove("d-none"),results.classList.add("d-flex");function o(e){document.querySelector(".the-splits").insertAdjacentHTML("beforeEnd",`\n            <div class="mb-3">\n                <label for="race-${e.name}-control" class="form-label">\n                    Split ${e.name}\n                </label>\n                <input type="text" class="form-control race-splits" id="race-distance-control-${e.split}" value=${(e=>{const t=e%60;function n(e){return e.toString().padStart(2,"0")}return`${n(Math.floor(e/60))}:${n(t)}`})(e.elapsed_time)}>\n            </div>\n            `)}function r(e,t){void 0!==e&&(document.querySelector(`#race-${t}-control`).value=e)}r(t,"name"),r(n,"time"),r(e.total_elevation_gain,"elevation"),document.querySelector("#race-date-control").value=function(e){const t=new Date(e),n=t.toLocaleString("default",{month:"long"});return`${t.toLocaleString("default",{weekday:"long"})} ${n} ${t.getDate()}, ${t.getUTCFullYear()}`}(e.start_date),document.querySelector("#race-distance-control").value=`${(e.distance/1e3).toFixed(2)} km`,r(e.location_city,"location"),document.querySelector("#race-time-control").value=n,document.querySelector("#race-location-control").value=e.location_city,e.laps.forEach((e=>o(e)))}function setPreview(){document.querySelector(".table-body").innerHTML="";const e=document.querySelectorAll(".card--race-info input"),t=Array.from(document.querySelectorAll(".card--splits .race-splits"));t.forEach(((e,t)=>{((e,t)=>{let n=`\n            <th scope="row">${t+1}</th>\n            <td>${e.value}</td>\n        `;document.querySelector(".table--splits").insertAdjacentHTML("beforeend",n)})(e,t)})),e.forEach((e=>(e=>{const t=e.id.split("-")[1];document.querySelector(`.preview__${t}`).innerHTML=e.value})(e)))}function setSplitsPreview(){document.querySelector(".table--splits").innerHTML="";const e=Array.from(document.querySelectorAll(".card--splits .race-splits"));e.forEach(((e,t)=>{((e,t)=>{let n=`\n            <th scope="row">${t+1}</th>\n            <td>${e.value}</td>\n        `;document.querySelector(".table--splits").insertAdjacentHTML("beforeend",n)})(e,t)}))}function setGoalsPreview(e){e.target.classList.contains("goal-delete")&&e.target.parentElement.remove();const t=["a","b","c","d","e"],n=Array.from(document.querySelectorAll(".goal")),o=n.map(((e,n)=>{return`\n            <tr class="preview__goal">\n                <td>${r=n,t[r]}</td>\n                <td>${e.children[1].value}</td>\n                <td>${o=e.children[0].children[0].checked,o?"Yes":"No"}</td>\n            </tr>\n        `;var o,r}));document.querySelector(".table--goals").innerHTML=o.join("")}function handleSubmit(e){e.preventDefault();const t=form.elements[0].value;localStorage.setItem("actID",t);window.location="https://www.strava.com/oauth/authorize?client_id=96784&response_type=code&redirect_uri=https://race-report-gen.jezl.xyz/&approval_prompt=force&scope=activity:read_all"}function updateSplits(e){const t=e=>{document.querySelector(".the-splits").insertAdjacentHTML("beforeEnd",`\n            <div class="mb-3">\n                <label for="race-${e.split}-control" class="form-label">\n                    Split ${e.split}\n                </label>\n                <input type="text" class="form-control race-splits" id="race-distance-control-${e.split}" value=${(e=>{const t=e%60;function n(e){return e.toString().padStart(2,"0")}return`${n(Math.floor(e/60))}:${n(t)}`})(e.elapsed_time)}>\n            </div>\n            `)};let n;"km"===e.target.value?n=globalRace.splits_metric:(e.target.value="miles",n=globalRace.splits_standard),document.querySelector(".the-splits").innerHTML="",n.forEach((e=>t(e))),setSplitsPreview()}observer.observe(previewArea,config),window.addEventListener("load",(()=>{const e=window.location.search,t=new URLSearchParams(e).get("code");if(null!=t){const e=localStorage.getItem("actID");activityInput.value=e,displayLoading(),fetch(`https://www.strava.com/oauth/token?client_id=${clientId}&client_secret=${clientSecret}&code=${t}&grant_type=authorization_code`,{method:"POST"}).then((e=>e.json())).then((t=>displayData(t.access_token,e)))}})),unitRadios.forEach((e=>{e.addEventListener("change",updateSplits)}));
//# sourceMappingURL=index.8d159b8e.js.map
